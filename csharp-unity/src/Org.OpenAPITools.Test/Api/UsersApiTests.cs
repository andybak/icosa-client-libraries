/*
 * NinjaAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing UsersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UsersApiTests : IDisposable
    {
        private UsersApi instance;

        public UsersApiTests()
        {
            instance = new UsersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UsersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UsersApi
            //Assert.IsType<UsersApi>(instance);
        }

        /// <summary>
        /// Test IcosaApiUsersGetMeAssets
        /// </summary>
        [Test]
        public void IcosaApiUsersGetMeAssetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? category = null;
            //bool? curated = null;
            //List<string>? format = null;
            //string? keywords = null;
            //string? name = null;
            //string? description = null;
            //List<string>? tag = null;
            //string? orderBy = null;
            //string? orderBy2 = null;
            //Complexity? maxComplexity = null;
            //int? triangleCountMin = null;
            //int? triangleCountMax = null;
            //string? visibility = null;
            //string? pageToken = null;
            //string? pageToken2 = null;
            //string? pageSize = null;
            //string? pageSize2 = null;
            //var response = instance.IcosaApiUsersGetMeAssets(category, curated, format, keywords, name, description, tag, orderBy, orderBy2, maxComplexity, triangleCountMin, triangleCountMax, visibility, pageToken, pageToken2, pageSize, pageSize2);
            //Assert.IsType<PagedAssetSchemaOut>(response);
        }

        /// <summary>
        /// Test IcosaApiUsersGetMeLikedassets
        /// </summary>
        [Test]
        public void IcosaApiUsersGetMeLikedassetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? category = null;
            //bool? curated = null;
            //List<string>? format = null;
            //string? keywords = null;
            //string? name = null;
            //string? description = null;
            //List<string>? tag = null;
            //string? orderBy = null;
            //string? orderBy2 = null;
            //Complexity? maxComplexity = null;
            //int? triangleCountMin = null;
            //int? triangleCountMax = null;
            //string? authorName = null;
            //string? authorName2 = null;
            //string? license = null;
            //string? pageToken = null;
            //string? pageToken2 = null;
            //string? pageSize = null;
            //string? pageSize2 = null;
            //var response = instance.IcosaApiUsersGetMeLikedassets(category, curated, format, keywords, name, description, tag, orderBy, orderBy2, maxComplexity, triangleCountMin, triangleCountMax, authorName, authorName2, license, pageToken, pageToken2, pageSize, pageSize2);
            //Assert.IsType<PagedAssetSchemaOut>(response);
        }

        /// <summary>
        /// Test IcosaApiUsersGetUsersMe
        /// </summary>
        [Test]
        public void IcosaApiUsersGetUsersMeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.IcosaApiUsersGetUsersMe();
            //Assert.IsType<FullUserSchema>(response);
        }

        /// <summary>
        /// Test IcosaApiUsersUpdateUser
        /// </summary>
        [Test]
        public void IcosaApiUsersUpdateUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PatchUserSchema patchUserSchema = null;
            //var response = instance.IcosaApiUsersUpdateUser(patchUserSchema);
            //Assert.IsType<FullUserSchema>(response);
        }
    }
}
