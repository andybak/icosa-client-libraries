/*
 * NinjaAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// PagedAssetSchemaOut
    /// </summary>
    [DataContract(Name = "PagedAssetSchemaOut")]
    public partial class PagedAssetSchemaOut
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PagedAssetSchemaOut" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PagedAssetSchemaOut() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PagedAssetSchemaOut" /> class.
        /// </summary>
        /// <param name="assets">assets (required).</param>
        /// <param name="totalSize">totalSize (required).</param>
        /// <param name="nextPageToken">nextPageToken.</param>
        public PagedAssetSchemaOut(List<AssetSchemaOut> assets = default(List<AssetSchemaOut>), int totalSize = default(int), string nextPageToken = default(string))
        {
            // to ensure "assets" is required (not null)
            if (assets == null)
            {
                throw new ArgumentNullException("assets is a required property for PagedAssetSchemaOut and cannot be null");
            }
            this.Assets = assets;
            this.TotalSize = totalSize;
            this.NextPageToken = nextPageToken;
        }

        /// <summary>
        /// Gets or Sets Assets
        /// </summary>
        [DataMember(Name = "assets", IsRequired = true, EmitDefaultValue = true)]
        public List<AssetSchemaOut> Assets { get; set; }

        /// <summary>
        /// Gets or Sets TotalSize
        /// </summary>
        [DataMember(Name = "totalSize", IsRequired = true, EmitDefaultValue = true)]
        public int TotalSize { get; set; }

        /// <summary>
        /// Gets or Sets NextPageToken
        /// </summary>
        [DataMember(Name = "nextPageToken", EmitDefaultValue = true)]
        public string NextPageToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PagedAssetSchemaOut {\n");
            sb.Append("  Assets: ").Append(Assets).Append("\n");
            sb.Append("  TotalSize: ").Append(TotalSize).Append("\n");
            sb.Append("  NextPageToken: ").Append(NextPageToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
