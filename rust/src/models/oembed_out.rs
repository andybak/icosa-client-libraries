/*
 * NinjaAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OembedOut {
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "version")]
    pub version: Version,
    #[serde(rename = "title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<String>>,
    #[serde(rename = "author_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub author_name: Option<Option<String>>,
    #[serde(rename = "author_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub author_url: Option<Option<String>>,
    #[serde(rename = "provider_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub provider_name: Option<Option<String>>,
    #[serde(rename = "provider_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub provider_url: Option<Option<String>>,
    #[serde(rename = "cache_age", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cache_age: Option<Option<String>>,
    #[serde(rename = "thumbnail_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub thumbnail_url: Option<Option<String>>,
    #[serde(rename = "thumbnail_width", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub thumbnail_width: Option<Option<String>>,
    #[serde(rename = "thumbnail_height", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub thumbnail_height: Option<Option<String>>,
    #[serde(rename = "html")]
    pub html: String,
    #[serde(rename = "width")]
    pub width: i32,
    #[serde(rename = "height")]
    pub height: i32,
}

impl OembedOut {
    pub fn new(r#type: Type, version: Version, html: String, width: i32, height: i32) -> OembedOut {
        OembedOut {
            r#type,
            version,
            title: None,
            author_name: None,
            author_url: None,
            provider_name: None,
            provider_url: None,
            cache_age: None,
            thumbnail_url: None,
            thumbnail_width: None,
            thumbnail_height: None,
            html,
            width,
            height,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "rich")]
    Rich,
}

impl Default for Type {
    fn default() -> Type {
        Self::Rich
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Version {
    #[serde(rename = "1.0")]
    Variant1Period0,
}

impl Default for Version {
    fn default() -> Version {
        Self::Variant1Period0
    }
}

