extends ApiBee
class_name OembedApi

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, © Public Domain, 2022

# API OembedApi
# Instantiate this object and use it to make requests to the API.

func _bzz_get_api_name() -> String:
	return "OembedApi"


# Operation icosaApiOembedOembed → GET /v1/oembed
# Oembed
func icosa_api_oembed_oembed(
	# url: String   Eg: url_example
	url = null,
	# format: String   Eg: format_example
	format = null,
	# maxwidth: int   Eg: 56
	maxwidth = null,
	# maxheight: int   Eg: 56
	maxheight = null,
	on_success: Callable = Callable(),  # func(response: ApiResponse)
	on_failure: Callable = Callable(),  # func(error: ApiError)
):

	# Convert the String HTTP method to a Constant Godot understands
	var bzz_method := self._bzz_convert_http_method("GET")

	# Compute the URL path to the API resource
	var bzz_path := "/v1/oembed"

	# Collect the headers
	var bzz_headers := Dictionary()
	var bzz_mimes_produced_by_server := ['application/json']
	for bzz_mime in BZZ_CONSUMABLE_CONTENT_TYPES:
		if bzz_mime in bzz_mimes_produced_by_server:
			bzz_headers["Accept"] = bzz_mime
			break

	# Collect the query parameters
	# Note: we do not support multiple values for a single param (for now), nor arrays
	var bzz_query := Dictionary()
	bzz_query["url"] = url
	bzz_query["format"] = format
	bzz_query["maxwidth"] = maxwidth
	bzz_query["maxheight"] = maxheight

	var bzz_body = null

	self._bzz_request(
		bzz_method, bzz_path, bzz_headers, bzz_query, bzz_body,
		func(bzz_response):
			bzz_response.data = OembedOut.bzz_denormalize_single(bzz_response.data)
			on_success.call(bzz_response)
			,
		func(bzz_error):
			on_failure.call(bzz_error)
			,  # ざわ‥
	)


func icosa_api_oembed_oembed_threaded(
	# url: String   Eg: url_example
	url = null,
	# format: String   Eg: format_example
	format = null,
	# maxwidth: int   Eg: 56
	maxwidth = null,
	# maxheight: int   Eg: 56
	maxheight = null,
	on_success: Callable = Callable(),  # func(response: ApiResponse)
	on_failure: Callable = Callable(),  # func(error: ApiError)
) -> Thread:
	var bzz_thread := Thread.new()
	var bzz_callable := Callable(self, "icosa_api_oembed_oembed")
	bzz_callable.bind(
		url,
		format,
		maxwidth,
		maxheight,
		on_success,
		on_failure,
	)
	bzz_thread.start(bzz_callable)
	return bzz_thread


